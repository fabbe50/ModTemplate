buildscript {
    repositories {
        mavenCentral()
        maven {url = "http://files.minecraftforge.net/maven"}
        maven {url = "https://oss.sonatype.org/content/repositories/snapshots/"}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}

apply plugin: 'maven-publish'

ext.configFile = file('gradle.properties')
ext.config = parseConfig(configFile)

def build_number = 'CUSTOM'

if (build_number == 'CUSTOM')
    build_number = mod_build

def username = 'DevPlayer'

if (project.hasProperty('dev_username'))
    username = "${dev_username}"

group = package_group
archivesBaseName = mod_name
version = "${mod_version}-${mod_state}${build_number}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    replace "@VERSION@", project.version
    replaceIn "Reference.java"
    
    replace "@BUILD@", build_number
    replaceIn "Reference.java"

    clientRunArgs += "--username=${username}"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url "http://mobiusstrip.eu/maven" }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mc_version': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

version = "${project.minecraft.version}-${version}"

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            //"Git-Hash": gitHash,
            "Built-On": "${mc_version}-${forge_version}"
    )
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

task incrementBuildNumber {
    config.mod_build = (config.mod_build.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'